import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import React, { useEffect, useRef } from "react";
import BlogItem from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { useRouter } from "next/router";
import { BlogType } from "../../types/types";

type BlogProps = {
  blogs: BlogType[];
};

const Blog: NextPage<BlogProps> = ({ blogs = [] }) => {
  const searchBarValue = useRef<HTMLInputElement>(null);

  const router = useRouter();

  const filterByCategory = (searchQuery: string) => {
    router.push({
      pathname: router.pathname,
      query: {
        ...router.query,
        category_like: searchQuery,
      },
    });
  };

  const filterBySearchBar = (searchQuery: string) => {
    router.push({
      pathname: router.pathname,
      query: {
        ...router.query,

        q: searchQuery,
      },
    });
  };

  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {/* blog item */}
                {blogs.length > 0 ? (
                  blogs.map((blog) => <BlogItem key={blog.id} {...blog} />)
                ) : (
                  <p>There are no results with your search.</p>
                )}
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <form
                  className="bor17 of-hidden pos-relative"
                  onSubmit={(e) => {
                    e.preventDefault();

                    filterBySearchBar(searchBarValue.current?.value as string);
                    searchBarValue.current!.value = "";
                  }}
                >
                  <input
                    className="stext-103 cl2 plh4 size-116 p-l-28 p-r-55"
                    type="text"
                    name="search"
                    placeholder="Search"
                    ref={searchBarValue}
                  />

                  <button className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04">
                    <i className="zmdi zmdi-search"></i>
                  </button>
                </form>

                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>

                  <ul>
                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={(e) => {
                          filterByCategory("fashion");
                        }}
                      >
                        Fashion
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={(e) => {
                          filterByCategory("beauty");
                        }}
                      >
                        Beauty
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={(e) => {
                          filterByCategory("streetstyle");
                        }}
                      >
                        Street Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={(e) => {
                          filterByCategory("lifestyle");
                        }}
                      >
                        Life Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        data-filter="diy"
                        onClick={(e) => {
                          filterByCategory("diy");
                        }}
                      >
                        DIY & Crafts
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Blog;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const categoryQuery = query.category_like as string;
  const searchBarQuery = query.q as string;

  console.log("category query", categoryQuery);

  const finalSearchQuery = (categoryQuery: string, searchQuery: string) => {
    if (categoryQuery && searchQuery) {
      return `http://localhost:5001/blogs?category_like=${categoryQuery}&q=${searchQuery}`;
    } else if (categoryQuery) {
      return `http://localhost:5001/blogs?category_like=${categoryQuery}`;
    } else if (searchQuery) {
      return `http://localhost:5001/blogs?q=${searchQuery}`;
    } else {
      return `http://localhost:5001/blogs`;
    }
  };

  try {
    const res = await fetch(finalSearchQuery(categoryQuery, searchBarQuery));
    const blogs = await res.json();

    return {
      props: {
        blogs,
      },
    };
  } catch (err) {
    return {
      notFound: true,
    };
  }
};
