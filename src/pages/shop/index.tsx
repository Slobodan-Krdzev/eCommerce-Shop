import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { ProductType } from "../../types/types";
import Link from "next/link";
import ProductItem from "../../components/ProductItem";
import { useEffect, useRef, useState } from "react";
import Image from "next/image";

type ShopProps = {
  products: ProductType[];
};

const Shop: NextPage<ShopProps> = ({ products }) => {
  const searchBar = useRef<HTMLInputElement>(null);
  const router = useRouter();

  console.log(router.query.gender_like);
  

  const removeGenderFilter = () => {
    delete router.query.gender_like;
    router.push(router);
  };

  const removeTypeFilter = () => {
    delete router.query.q;
    router.push(router);
  };

  const filterGender = (filterQuery: string) => {
    router.push({
      pathname: router.pathname,
      query: {
        ...router.query,
        gender_like: filterQuery,
      },
    });
  };

  const filterType = (filterQuery: string) => {
    router.push({
      pathname: router.pathname,
      query: {
        ...router.query,
        q: filterQuery,
      },
    });
  };

  const filterBySearchBar = (filterQuery: string) => {
    router.push({
      pathname: router.pathname,
      query: {
        ...router.query,
        q: filterQuery,
      },
    });
  };

  return (
    <>
      <Head>
        <title>Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <div className="flex-w flex-sb-m p-b-52">
            <div className="flex-w flex-l-m filter-tope-group m-tb-10">
              <div className="btn-wrapper m-r-32 m-tb-5">
                <button
                  className={`${
                    Boolean(Object.keys(router.query).length === 0)
                      ? "how-active1"
                      : ""
                  } stext-106 cl6 hov1 bor3 trans-04 `}
                  data-filter="*"
                  onClick={() => {
                    router.push({
                      pathname: "/shop",
                    });
                  }}
                >
                  All Products
                </button>
              </div>

              <div className="btn-wrapper m-r-32 m-tb-5">
                <button
                  className={`${
                    Boolean(router.query.gender_like === "women")
                      ? "how-active1"
                      : ""
                  } stext-106 cl6 hov1 bor3 trans-04 mr-2`}
                  data-filter=".women"
                  onClick={(e) => {
                    filterGender(e.currentTarget.innerHTML.toLowerCase());
                  }}
                >
                  Women
                </button>
                {(router.query.gender_like === 'women' ? 
                  <button
                  className="px-2 border rounded-circle bg-danger"
                  onClick={(e) => removeGenderFilter()}
                >
                  <Image
                    src="/images/icons/icon-close2.png"
                    alt="CLOSE"
                    width={10}
                    height={10}
                  />
                </button>
                  : '')}
                
              </div>

              <div className="btn-wrapper m-r-32 m-tb-5">
                <button
                  className={`${
                    Boolean(router.query.gender_like === "man")
                      ? "how-active1"
                      : ""
                  } stext-106 cl6 hov1 bor3 trans-04 mr-2`}
                  data-filter=".men"
                  onClick={(e) => {
                    filterGender(e.currentTarget.innerHTML.toLowerCase());
                  }}
                >
                  Man
                </button>
                {(router.query.gender_like === 'man' ? 
                  <button
                  className="px-2 border rounded-circle bg-danger"
                  onClick={(e) => removeGenderFilter()}
                >
                  <Image
                    src="/images/icons/icon-close2.png"
                    alt="CLOSE"
                    width={10}
                    height={10}
                  />
                </button>
                  : '')}
              </div>

              <div className="btn-wrapper m-r-32 m-tb-5">
                <button
                  className={`${
                    Boolean(router.query.q === "belt") ? "how-active1" : ""
                  } stext-106 cl6 hov1 bor3 trans-04 mr-2`}
                  data-filter=".bag"
                  onClick={(e) => {
                    filterType(e.currentTarget.innerHTML.toLowerCase());
                  }}
                >
                  Belt
                </button>
                {(router.query.q === "belt" ? 
                  <button
                  className="px-2 border rounded-circle bg-danger"
                  onClick={(e) => removeTypeFilter()}
                >
                  <Image
                    src="/images/icons/icon-close2.png"
                    alt="CLOSE"
                    width={10}
                    height={10}
                  />
                </button>
                  : '')}
              </div>

              <div className="btn-wrapper m-r-32 m-tb-5">
                <button
                  className={`${
                    Boolean(router.query.q === "shoes") ? "how-active1" : ""
                  } stext-106 cl6 hov1 bor3 trans-04 mr-2`}
                  data-filter=".shoes"
                  onClick={(e) => {
                    filterType(e.currentTarget.innerHTML.toLowerCase());
                  }}
                >
                  Shoes
                </button>
                {(router.query.q === "shoes" ? 
                  <button
                  className="px-2 border rounded-circle bg-danger"
                  onClick={(e) => removeTypeFilter()}
                >
                  <Image
                    src="/images/icons/icon-close2.png"
                    alt="CLOSE"
                    width={10}
                    height={10}
                  />
                </button>
                  : '')}
              </div>

              <div className="btn-wrapper m-r-32 m-tb-5">
                <button
                  className={`${
                    Boolean(router.query.q === "watch") ? "how-active1" : ""
                  } stext-106 cl6 hov1 bor3 trans-04 mr-2`}
                  data-filter=".watches"
                  onClick={(e) => {
                    filterType(
                      e.currentTarget.innerHTML.split("e")[0].toLowerCase()
                    );
                  }}
                >
                  Watches
                </button>
                {(router.query.q === "watch" ? 
                  <button
                  className="px-2 border rounded-circle bg-danger"
                  onClick={(e) => removeTypeFilter()}
                >
                  <Image
                    src="/images/icons/icon-close2.png"
                    alt="CLOSE"
                    width={10}
                    height={10}
                  />
                </button>
                  : '')}
              </div>
            </div>

            <div className="flex-w flex-c-m m-tb-10">
              <div className="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search show-search">
                <i className="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                Search
              </div>
            </div>

            {/* search */}
            <div className="panel-search w-full p-t-10 p-b-15">
              <div className="bor8 dis-flex p-l-15">
                <button className="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                  <i className="zmdi zmdi-search"></i>
                </button>

                <input
                  className="mtext-107 cl2 size-114 plh2 p-r-15"
                  type="text"
                  name="search-product"
                  placeholder="Search"
                  ref={searchBar}
                  onChange={(e) => {
                    filterBySearchBar(searchBar.current?.value!);
                  }}
                />
              </div>
            </div>
          </div>

          <div className="row isotope-grid">
            {products.length > 0 ? (
              (products ?? []).map((product) => (
                <ProductItem key={product.id} {...product} />
              ))
            ) : (
              <h2>No Results To Show</h2>
            )}
          </div>

          <div className="flex-l-m flex-w w-full p-t-10 m-lr--7">
            <a
              href="#"
              className="flex-c-m how-pagination1 trans-04 m-all-7 active-pagination1"
            >
              1
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              2
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              3
            </a>
          </div>
        </div>
      </div>
    </>
  );
};

export default Shop;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const genderQuery = context.query.gender_like as string;
  const productTypeQuery = context.query.q as string;

  const finalSearchQuery = (genderQuery: string, productQuery: string) => {
    if (genderQuery && productQuery) {
      return `http://localhost:5001/products?gender_like=${genderQuery}&q=${productQuery}`;
    } else if (genderQuery) {
      return `http://localhost:5001/products?gender_like=${genderQuery}`;
    } else if (productQuery) {
      return `http://localhost:5001/products?q=${productQuery}`;
    } else {
      return "http://localhost:5001/products";
    }
  };

  const [productsRes] = await Promise.all([
    fetch(finalSearchQuery(genderQuery, productTypeQuery)),
  ]);

  const [products] = await Promise.all([productsRes.json()]);

  return {
    props: {
      products,
    },
  };
};
